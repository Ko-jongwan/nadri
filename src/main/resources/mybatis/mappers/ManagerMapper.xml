<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nadri.manager.mapper.ManagerMapper">
	<select id="getManager" parameterType="string" resultType="com.nadri.manager.vo.Manager">
		select 
			manager_no as no,
			manager_id as id,
			manager_password as password,
			manager_check as isChecked
		from manager
		where 
			manager_id = #{value}
	</select>
	
	<select id="getAllUser" resultType="com.nadri.user.vo.User">
		select 
			user_no as no, 
			user_id as id, 
			user_name as name, 
			user_birth as birth, 
			user_gender as gender, 
			user_tel as tel, 
			user_address as address, 
			user_point as point, 
			user_delete_check as deleteCheck,  
			user_email as email, 
			user_type as type, 
			user_created_date as createdDate, 
			user_sms_check as smsCheck, 
			user_email_Check as emailCheck
		from  
			user_table
		order by user_no
	</select>
	<select id="getUserByCriteria" parameterType="com.nadri.manager.dto.UserCriteria"  resultType="com.nadri.user.vo.User">
		select 
			user_no as no, 
			user_id as id, 
			user_name as name, 
			user_birth as birth, 
			user_gender as gender, 
			user_tel as tel, 
			user_address as address, 
			user_point as point, 
			user_delete_check as deleteCheck,  
			user_email as email, 
			user_type as type, 
			user_created_date as createdDate, 
			user_sms_check as smsCheck, 
			user_email_check as emailCheck,
			user_deleted_date as deletedDate
		from  (select row_number() over(order by user_no) rn, user_no, 
			   		  user_id, user_name, user_birth, user_gender, user_tel, user_address, user_point, user_delete_check,  
			   	 	  user_email, user_type, user_created_date, user_sms_check, user_email_check, user_deleted_date
			   from  
			   		user_table
			<where>
				<if test='keyword != "" or keyword != null'>
					<choose>
						<when test='option == "id"'>
							user_id like '%' || #{keyword} || '%'
						</when>
						<when test='option == "name"'>
							user_name like '%' || #{keyword} || '%'
						</when>
					</choose>
				</if>
				<if test='deleted == "Y"'>
					and user_delete_check = 1
				</if>
				<if test='email == "Y"'>
					and user_email_check is not null
				</if>
				<if test='sms == "Y"'>
					and user_sms_check is not null
				</if>
			</where>)
		where rn >= #{begin} and rn &lt; #{end}
	</select>
	
	<select id="getCountUserByCriteria" parameterType="com.nadri.manager.dto.UserCriteria"  resultType="int">
		select count(*)
		from user_table
		<where>
			<if test='keyword != "" or keyword != null'>
				<choose>
					<when test='option == "id"'>
						user_id like '%' || #{keyword} || '%'
					</when>
					<when test='option == "name"'>
						user_name like '%' || #{keyword} || '%'
					</when>
				</choose>
			</if>
			<if test='deleted == "Y"'>
				and user_delete_check = 1
			</if>
			<if test='email == "Y"'>
				and user_email_check is not null
			</if>
			<if test='sms == "Y"'>
				and user_sms_check is not null
			</if>
		</where>
	</select>
	
	<!-- 성별 비율 -->
	<select id="getGenderRateOfUser" resultType="int">
		select count(*)
		from user_table
		where user_delete_check = 0
		group by user_gender
	</select>
	<!-- 나이별 비율 -->
	<select id="getAgeRateOfUser" resultType="com.nadri.manager.dto.UserAgeRate">
		with age_count 
		as (select age, count(*) as cnt
		from ( select CASE
			        when floor((to_char(sysdate, 'yyyy') - (to_char(user_birth, 'yyyy'))) / 10) * 10 &lt; 20 then 10
			        when floor((to_char(sysdate, 'yyyy') - (to_char(user_birth, 'yyyy'))) / 10) * 10 &lt; 30 then 20
			        when floor((to_char(sysdate, 'yyyy') - (to_char(user_birth, 'yyyy'))) / 10) * 10 &lt; 40 then 30
			        when floor((to_char(sysdate, 'yyyy') - (to_char(user_birth, 'yyyy'))) / 10) * 10 &lt; 50 then 40
			        else 50
			        end as age
				from user_table
				where user_delete_check = 0)
		group by age),
		ages as (
		select level * 10 age
		from dual
		connect by level &lt;=5)
		select b.age as  age,
			nvl(a.cnt, 0) as count
		from age_count a, ages b
		where a.age(+) = b.age
		order by b.age
	</select>
	
	<!-- 인기 노선 BEST4 -->
	<select id="getFavoriteTrain" resultType="com.nadri.manager.dto.FavoriteCategoryDto">
		select a.rn as rowNo, 
			t1.station_name || '  ▶  ' || t2.station_name as destination, 
			a.cnt as count, 
			r.route_image as image
		from train_route r, train_station t1, train_station t2,
		        (select row_number() over (order by count(*) desc) rn, s.route_no, count(*) cnt
		        from train_ticket t, train_schedule s, train_reservation n
		        where t.is_canceled = 'N'
		        and t.schedule_no = s.schedule_no
		        and to_char(n.reservation_date, 'yyyy-mm') = to_char(sysdate, 'yyyy-mm')
		        and t.reservation_no = n.reservation_no
		        group by s.route_no) a
		where r.route_no = a.route_no
		and a.rn >=1 and a.rn &lt;= 4
		and r.departure_station_id = t1.station_id
		and r.arrival_station_id = t2.station_id
		order by a.rn
	</select>
	
	<!-- 인기 음식점 BEST 4 -->
	<select id="getFavoirteRestuarnt" resultType="com.nadri.manager.dto.FavoriteCategoryDto">
		select r.restaurant_name as destination, 
				r.restaurant_picture as image, 
				a.cnt as count
		from restaurant r, (select row_number() over (order by count(*) desc) rn, e.restaurant_no, count(*) cnt
		        from restaurant_reservation e, restaurant r
		        where to_char(e.reservation_date, 'yyyy-mm') = to_char(sysdate, 'yyyy-mm')
		        and e.reservation_process = '완료'
		        and r.restaurant_no = e.restaurant_no
		        group by e.restaurant_no) a
		where r.restaurant_no = a.restaurant_no
		and a.rn >=1 and a.rn &lt;= 4
		order by a.rn
	</select>
	
	<!-- 인기 여행지 BEST 4 -->
	<select id="getFavoirteAttraction" resultType="com.nadri.manager.dto.FavoriteCategoryDto">
		select n.att_name as destination, n.att_photo as image, b.cnt as count
		from attraction n, (select row_number() over(order by count(*) desc) rn, o.att_no, count(*) cnt
		                    from att_order o, attraction a
		                    where to_char(o.order_date, 'yyyy-mm') = to_char(sysdate, 'yyyy-mm')
		                    and o.att_no = a.att_no
		                    and o.order_process = '결제'
		                    group by o.att_no) b
		where n.att_no = b.att_no
		and b.rn >=1 and b.rn &lt;= 4
		order by b.rn
	</select>
	
	<!-- 이번달과 지난달의 회원수 통계 -->
	<select id="getUserCountByMonth" resultType="com.nadri.manager.dto.UserCountDate">
		with sumDate
		as (
		select A.dates,
		    SUM(DECODE(A.months, to_char(ADD_MONTHS(sysdate, -1), 'mm'), A.CNT, 0)) before,
		    SUM(DECODE(A.months, to_char(sysdate, 'mm'), A.CNT, 0)) now
		from (select count(*) CNT, to_char(USER_CREATED_DATE, 'mm') months, to_char(USER_CREATED_DATE, 'fmdd') dates
		    from user_table
		    where to_char(USER_CREATED_DATE, 'yyyy/mm') in (to_char(sysdate, 'yyyy/mm'), to_char(ADD_MONTHS(sysdate, -1), 'yyyy/mm'))
		    group by to_char(USER_CREATED_DATE, 'mm'), to_char(USER_CREATED_DATE, 'fmdd')
		        ) A
		group by a.dates),
		createdDate as (
		select level as lab
		from dual
		connect by level &lt;= 31)
		select d.lab as dates, nvl(s.now, 0) as now, nvl(s.before, 0) as before
		from sumDate s, createdDate d
		where s.dates(+) = d.lab
		order by d.lab
	</select>
	
</mapper>