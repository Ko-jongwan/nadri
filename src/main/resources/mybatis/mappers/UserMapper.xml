<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nadri.user.mapper.UserMapper">

	<!-- 유저테이블 컬럼 조회했을때 User객체에 저장되도록 설정 -->
	<resultMap id="UserResultMap" type="com.nadri.user.vo.User">
		<id column="user_no" property="no"/>
		<result column="user_id" property="id"/>
		<result column="user_password" property="password"/>
		<result column="user_name" property="name"/>
		<result column="user_birth" property="birth"/>
		<result column="user_gender" property="gender"/>
		<result column="user_tel" property="tel"/>
		<result column="user_address" property="address"/>
		<result column="user_point" property="point"/>
		<result column="user_delete_check" property="deleteCheck"/>
		<result column="user_email" property="email"/>
		<result column="user_type" property="type"/>
		<result column="user_created_date" property="createdDate"/>
		<result column="user_sms_check" property="smsCheck"/>
		<result column="user_email_check" property="emailCheck"/>
		<result column="user_deleted_date" property="deletedDate"/>
	</resultMap>
	
	<!-- 
		void insertUser 
	-->
	<insert id="insertUser" parameterType="com.nadri.user.vo.User">
		<selectKey keyProperty="no" resultType="int" order="BEFORE">
			select user_no.nextval
			from dual
		</selectKey>
		insert into user_table
		(user_no, user_id, user_password, user_name, user_birth, user_gender, user_tel, 
		user_address, user_point, user_email, user_type, user_sms_check, user_email_check, user_deleted_date)
		values
		(#{no},#{id},#{password},#{name},#{birth},#{gender},#{tel},#{address},#{point},#{email},#{type},#{smsCheck},#{emailCheck},#{deletedDate})
	</insert>
	
	<!-- 
		void updateUser 
	-->
	<update id="updateUser" parameterType="com.nadri.user.vo.User">
		update
			user_table
		set
			user_password = #{password},
			user_tel = #{tel},
			user_email = #{email},
			user_address = #{address}
		where
			user_id = #{id}
	</update>
	
	<!-- 
		void updateUserPassword 
	-->
	<update id="updateUserPassword" parameterType="com.nadri.user.vo.User">
		update
			user_table
		set
			user_password = #{password}
		where
			user_id = #{id}
	</update>
	
	<!--
		void deleteUser 
	-->
	<update id="deleteUser" parameterType="com.nadri.user.vo.User">
		update
			user_table
		set
			user_delete_check = 1,
			user_deleted_date = sysdate
		where
			user_password = #{password}
	</update>

	<!-- 
		User getUserById 
	-->
	<select id="getUserById" parameterType="String" resultMap="UserResultMap">
		select  
			user_no, user_id, user_password, user_name, user_birth, user_gender, user_tel, user_address, user_point, 
			user_delete_check, user_email, user_type, user_created_date, user_sms_check, user_email_check, user_deleted_date 
		from  
			user_table
		where  
			user_id = #{value}
	</select>
	
	<!-- 
		User getUserByNo
	 -->
	<select id="getUserByNo" parameterType="int" resultMap="UserResultMap">
		select  
			user_no, user_id, user_password, user_name, user_birth, user_gender, user_tel, user_address, user_point, 
			user_delete_check, user_email, user_type, user_created_date, user_sms_check, user_email_check, user_deleted_date 
		from 
			user_table
		where 
			user_no = #{value}
	</select>
	
	<!-- 
		User getUserByEmail
	 -->
	<select id="getUserByEmail" parameterType="String" resultMap="UserResultMap">
		select  
			user_no, user_id, user_password, user_name, user_birth, user_gender, user_tel, user_address, user_point, 
			user_delete_check, user_email, user_type, user_created_date, user_sms_check, user_email_check, user_deleted_date 
		from 
			user_table
		where 
			user_email = #{value}
	</select>
	
</mapper>